DNA sample = #gtgcccc;
DNA sample2 = #atgccac;
int tempResult = lcs_length(sample,sample2,7, 7);
int lcs_length(DNA A, DNA B, int sizeA, int sizeB)
	int [(sizeA +1) * (sizeB + 1)] C; 
	int i2 = 0;
	for i2; i2< (sizeA * sizeB); i2 = i2+1 then 
		C[i2] = 0;
	end 
	int i = sizeA;
	int j = sizeB;
	for i=sizeA; i >= 0; i = i-1 then
		for j=sizeB; j >= 0; j = j-1 then
				
			if i == sizeA  | j == sizeB then
				
				int index = getIndex(i, j, sizeA, sizeB);
				C[index] = 0;
			elseif (A[i] == B[j]) then
				
				int index1 = getIndex(i,j,sizeA,sizeB);
				int index2 = getIndex(i+1,j+1,sizeA,sizeB);
				C[index1] = 1 + C[index2];
			else
				
				int index3 = getIndex((i+1), j, sizeA, sizeB);
				int index4 = getIndex(i,(j+1), sizeA, sizeB);
				int index5 = getIndex(i,j, sizeA, sizeB);
				int firstVal = C[index3];
				int secondVal = C[index4];
				int max = getMax(firstVal, secondVal);
				C[index5] = max;  
				
			end
			
		end
		
	end
	
	for i = 0; i<sizeA*sizeB; i=i+1 then
		//print(C[i]);
		end
	
	i= 0;
	j= 0;

	while (i < sizeA  & j<sizeB) then
		if (A[i] == B[j] ) then
			char temp = A[i];
			print(temp);
			i = i + 1;
			j = j+ 1 ;
		elseif C[getIndex(i+1, j, sizeA, sizeB)] >= C[getIndex(i, j+1, sizeA, sizeB)] then
			i = i +1 ;
		else 
			j = j + 1;
		end
	end

end
int getIndex(int x, int y, int sizeA, int sizeB)

	return sizeB * x + y;
end

int getMax(int x, int y)
	
	int result = -1;
	if x > y then result = x; else result = y; end
	return result;
end