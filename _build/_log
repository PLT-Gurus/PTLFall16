### Starting build.
# Target: src/DNAs.ml.depends, tags: { extension:ml, file:src/DNAs.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/DNAs.ml > src/DNAs.ml.depends
# Target: src/ast.ml.depends, tags: { extension:ml, file:src/ast.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/ast.ml > src/ast.ml.depends
# Target: src/codegen.ml.depends, tags: { extension:ml, file:src/codegen.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/codegen.ml > src/codegen.ml.depends
# Target: src/ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/ast.cmo, file:src/ast.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/ast.cmo src/ast.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/ast.cmo src/ast.ml
File "src/ast.ml", line 107, characters 25-728:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(LitCodon _|ArrayAcc (_, _)|ArrayAssign (_, _, _))
File "src/ast.ml", line 150, characters 2-1275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
ArrayDecl (_, _, _)
File "src/ast.ml", line 209, characters 22-27:
Warning 42: this use of stmts required disambiguation.
File "src/ast.ml", line 215, characters 19-24:
Warning 41: stmts belongs to several types: program func_decl
The first one was selected. Please disambiguate if this is wrong.
# Target: src/linker.ml.depends, tags: { extension:ml, file:src/linker.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/linker.ml > src/linker.ml.depends
# Target: src/linker.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/linker.cmo, file:src/linker.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/linker.cmo src/linker.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/linker.cmo src/linker.ml
File "src/linker.ml", line 1, characters 0-9:
Warning 33: unused open Llvm.
File "src/linker.ml", line 2, characters 0-22:
Warning 33: unused open Llvm.MemoryBuffer.
File "src/linker.ml", line 3, characters 0-19:
Warning 33: unused open Llvm_bitreader.
# Target: src/parser.mly, tags: { extension:mly, file:src/parser.mly, infer, ocaml, ocamlyacc, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), parser, quiet }
/usr/bin/ocamlyacc src/parser.mly
# Target: src/parser.mli.depends, tags: { extension:mli, file:src/parser.mli, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/parser.mli > src/parser.mli.depends
# Target: src/scanner.mll, tags: { extension:mll, file:src/scanner.mll, lexer, ocaml, ocamllex, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
/usr/bin/ocamllex -q src/scanner.mll
# Target: src/scanner.ml.depends, tags: { extension:ml, file:src/scanner.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/scanner.ml > src/scanner.ml.depends
# Target: src/parser.cmi, tags: { byte, compile, extension:mli, file:src/parser.mli, interf, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/parser.cmi src/parser.mli
# Target: src/semant.ml.depends, tags: { extension:ml, file:src/semant.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/semant.ml > src/semant.ml.depends
# Target: src/codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/codegen.cmo, file:src/codegen.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/codegen.cmo src/codegen.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/codegen.cmo src/codegen.ml
File "src/codegen.ml", line 19, characters 19-26:
Warning 41: stmts belongs to several types: A.program A.func_decl
The first one was selected. Please disambiguate if this is wrong.
File "src/codegen.ml", line 50, characters 4-11:
Warning 42: this use of stmts required disambiguation.
File "src/codegen.ml", line 171, characters 10-336:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Transcb|Translt|Translttwo)
File "src/codegen.ml", line 179, characters 10-243:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Neg|Not|Expon|Comp)
File "src/codegen.ml", line 335, characters 46-53:
Warning 42: this use of stmts required disambiguation.
File "src/codegen.ml", line 30, characters 6-14:
Warning 26: unused variable intptr_t.
File "src/codegen.ml", line 194, characters 14-23:
Warning 26: unused variable testPrint.
# Target: src/scanner.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/scanner.cmo, file:src/scanner.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/scanner.cmo src/scanner.ml
# Target: src/semant.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/semant.cmo, file:src/semant.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/semant.cmo src/semant.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/semant.cmo src/semant.ml
File "src/semant.ml", line 47, characters 15-1558:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Id _|ArrayAcc (_, _)|Assign (_, _)|ArrayAssign (_, _, _)|Call (_, _))
File "src/semant.ml", line 119, characters 15-774:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Return _|VDecl (_, _, _)|ArrayDecl (_, _, _)|Nobranching)
File "src/semant.ml", line 158, characters 3-8:
Warning 42: this use of stmts required disambiguation.
File "src/semant.ml", line 160, characters 3-8:
Warning 42: this use of stmts required disambiguation.
File "src/semant.ml", line 182, characters 18-23:
Warning 42: this use of stmts required disambiguation.
File "src/semant.ml", line 188, characters 18-23:
Warning 41: stmts belongs to several types: Ast.program Ast.func_decl
The first one was selected. Please disambiguate if this is wrong.
File "src/semant.ml", line 25, characters 23-24:
Warning 27: unused variable s.
File "src/semant.ml", line 109, characters 20-21:
Warning 27: unused variable e.
File "src/semant.ml", line 190, characters 5-19:
Warning 26: unused variable function_decls.
# Target: src/DNAs.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/DNAs.cmo, file:src/DNAs.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmo src/DNAs.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmo src/DNAs.ml
File "src/DNAs.ml", line 1, characters 0-8:
Warning 33: unused open Ast.
# Target: src/ast.cmx, tags: { compile, extension:cmx, extension:ml, file:src/ast.cmx, file:src/ast.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/ast.cmx src/ast.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/ast.cmx src/ast.ml
File "src/ast.ml", line 107, characters 25-728:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(LitCodon _|ArrayAcc (_, _)|ArrayAssign (_, _, _))
File "src/ast.ml", line 150, characters 2-1275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
ArrayDecl (_, _, _)
File "src/ast.ml", line 209, characters 22-27:
Warning 42: this use of stmts required disambiguation.
File "src/ast.ml", line 215, characters 19-24:
Warning 41: stmts belongs to several types: program func_decl
The first one was selected. Please disambiguate if this is wrong.
# Target: src/linker.cmx, tags: { compile, extension:cmx, extension:ml, file:src/linker.cmx, file:src/linker.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/linker.cmx src/linker.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/linker.cmx src/linker.ml
File "src/linker.ml", line 1, characters 0-9:
Warning 33: unused open Llvm.
File "src/linker.ml", line 2, characters 0-22:
Warning 33: unused open Llvm.MemoryBuffer.
File "src/linker.ml", line 3, characters 0-19:
Warning 33: unused open Llvm_bitreader.
# Target: src/parser.ml.depends, tags: { extension:ml, file:src/parser.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/parser.ml > src/parser.ml.depends
# Target: src/parser.cmx, tags: { compile, extension:cmx, extension:ml, file:src/parser.cmx, file:src/parser.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/parser.cmx src/parser.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/parser.cmx src/parser.ml
File "src/parser.mly", line 58, characters 43-48:
Warning 42: this use of stmts required disambiguation.
File "src/parser.mly", line 2, characters 0-8:
Warning 45: this open statement shadows the constructor DNA (which is later used)
File "src/parser.mly", line 2, characters 0-8:
Warning 45: this open statement shadows the constructor RNA (which is later used)
# Target: src/codegen.cmx, tags: { compile, extension:cmx, extension:ml, file:src/codegen.cmx, file:src/codegen.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/codegen.cmx src/codegen.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/codegen.cmx src/codegen.ml
File "src/codegen.ml", line 19, characters 19-26:
Warning 41: stmts belongs to several types: A.program A.func_decl
The first one was selected. Please disambiguate if this is wrong.
File "src/codegen.ml", line 50, characters 4-11:
Warning 42: this use of stmts required disambiguation.
File "src/codegen.ml", line 171, characters 10-336:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Transcb|Translt|Translttwo)
File "src/codegen.ml", line 179, characters 10-243:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Neg|Not|Expon|Comp)
File "src/codegen.ml", line 335, characters 46-53:
Warning 42: this use of stmts required disambiguation.
File "src/codegen.ml", line 30, characters 6-14:
Warning 26: unused variable intptr_t.
File "src/codegen.ml", line 194, characters 14-23:
Warning 26: unused variable testPrint.
# Target: src/scanner.cmx, tags: { compile, extension:cmx, extension:ml, file:src/scanner.cmx, file:src/scanner.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/scanner.cmx src/scanner.ml
# Target: src/semant.cmx, tags: { compile, extension:cmx, extension:ml, file:src/semant.cmx, file:src/semant.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/semant.cmx src/semant.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/semant.cmx src/semant.ml
File "src/semant.ml", line 47, characters 15-1558:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Id _|ArrayAcc (_, _)|Assign (_, _)|ArrayAssign (_, _, _)|Call (_, _))
File "src/semant.ml", line 119, characters 15-774:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Return _|VDecl (_, _, _)|ArrayDecl (_, _, _)|Nobranching)
File "src/semant.ml", line 158, characters 3-8:
Warning 42: this use of stmts required disambiguation.
File "src/semant.ml", line 160, characters 3-8:
Warning 42: this use of stmts required disambiguation.
File "src/semant.ml", line 182, characters 18-23:
Warning 42: this use of stmts required disambiguation.
File "src/semant.ml", line 188, characters 18-23:
Warning 41: stmts belongs to several types: Ast.program Ast.func_decl
The first one was selected. Please disambiguate if this is wrong.
File "src/semant.ml", line 25, characters 23-24:
Warning 27: unused variable s.
File "src/semant.ml", line 109, characters 20-21:
Warning 27: unused variable e.
File "src/semant.ml", line 190, characters 5-19:
Warning 26: unused variable function_decls.
# Target: src/DNAs.cmx, tags: { compile, extension:cmx, extension:ml, file:src/DNAs.cmx, file:src/DNAs.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmx src/DNAs.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmx src/DNAs.ml
File "src/DNAs.ml", line 1, characters 0-8:
Warning 33: unused open Ast.
# Target: src/DNAs.native, tags: { dont_link_with, extension:native, file:src/DNAs.native, link, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), program, quiet }
ocamlfind ocamlopt -linkpkg -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm src/ast.cmx src/linker.cmx src/codegen.cmx src/parser.cmx src/scanner.cmx src/semant.cmx src/DNAs.cmx -o src/DNAs.native
# Compilation successful.
