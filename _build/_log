### Starting build.
# Target: src/DNAs.ml.depends, tags: { extension:ml, file:src/DNAs.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/DNAs.ml > src/DNAs.ml.depends
# Target: src/ast.ml.depends, tags: { extension:ml, file:src/ast.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/ast.ml > src/ast.ml.depends # cached
# Target: src/ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/ast.cmo, file:src/ast.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/ast.cmo src/ast.ml # cached
# Target: src/codegen.ml.depends, tags: { extension:ml, file:src/codegen.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/codegen.ml > src/codegen.ml.depends # cached
# Target: src/linker.ml.depends, tags: { extension:ml, file:src/linker.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/linker.ml > src/linker.ml.depends # cached
# Target: src/linker.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/linker.cmo, file:src/linker.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/linker.cmo src/linker.ml # cached
# Target: src/codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/codegen.cmo, file:src/codegen.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/codegen.cmo src/codegen.ml # cached
# Target: src/parser.mly, tags: { extension:mly, file:src/parser.mly, infer, ocaml, ocamlyacc, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), parser, quiet }
/usr/bin/ocamlyacc src/parser.mly # cached
# Target: src/parser.mli.depends, tags: { extension:mli, file:src/parser.mli, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/parser.mli > src/parser.mli.depends # cached
# Target: src/parser.cmi, tags: { byte, compile, extension:mli, file:src/parser.mli, interf, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/parser.cmi src/parser.mli # cached
# Target: src/scanner.mll, tags: { extension:mll, file:src/scanner.mll, lexer, ocaml, ocamllex, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
/usr/bin/ocamllex -q src/scanner.mll # cached
# Target: src/scanner.ml.depends, tags: { extension:ml, file:src/scanner.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/scanner.ml > src/scanner.ml.depends # cached
# Target: src/scanner.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/scanner.cmo, file:src/scanner.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/scanner.cmo src/scanner.ml # cached
# Target: src/DNAs.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/DNAs.cmo, file:src/DNAs.ml, implem, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmo src/DNAs.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmo src/DNAs.ml
File "src/DNAs.ml", line 1, characters 0-8:
Warning 33: unused open Ast.
# Target: src/ast.cmx, tags: { compile, extension:cmx, extension:ml, file:src/ast.cmx, file:src/ast.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/ast.cmx src/ast.ml # cached
# Target: src/linker.cmx, tags: { compile, extension:cmx, extension:ml, file:src/linker.cmx, file:src/linker.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/linker.cmx src/linker.ml # cached
# Target: src/codegen.cmx, tags: { compile, extension:cmx, extension:ml, file:src/codegen.cmx, file:src/codegen.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/codegen.cmx src/codegen.ml # cached
# Target: src/parser.ml.depends, tags: { extension:ml, file:src/parser.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamldep -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -modules src/parser.ml > src/parser.ml.depends # cached
# Target: src/parser.cmx, tags: { compile, extension:cmx, extension:ml, file:src/parser.cmx, file:src/parser.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/parser.cmx src/parser.ml # cached
# Target: src/scanner.cmx, tags: { compile, extension:cmx, extension:ml, file:src/scanner.cmx, file:src/scanner.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/scanner.cmx src/scanner.ml # cached
# Target: src/DNAs.cmx, tags: { compile, extension:cmx, extension:ml, file:src/DNAs.cmx, file:src/DNAs.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmx src/DNAs.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm -I src -o src/DNAs.cmx src/DNAs.ml
File "src/DNAs.ml", line 1, characters 0-8:
Warning 33: unused open Ast.
# Target: src/DNAs.native, tags: { dont_link_with, extension:native, file:src/DNAs.native, link, native, ocaml, package(llvm), package(llvm.analysis), package(llvm.bitreader), package(llvm.bitwriter), package(llvm.linker), package(llvm.target), program, quiet }
ocamlfind ocamlopt -linkpkg -package llvm.target -package llvm.linker -package llvm.bitreader -package llvm.bitwriter -package llvm.analysis -package llvm src/ast.cmx src/linker.cmx src/codegen.cmx src/parser.cmx src/scanner.cmx src/DNAs.cmx -o src/DNAs.native
# Compilation successful.
